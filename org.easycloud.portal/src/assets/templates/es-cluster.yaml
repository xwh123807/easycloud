apiVersion: v1
kind: List
params:
-   name: user
    value: ecp
-   name: namespace
    value: default

items:
-   apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: elasticsearch-{user}
      namespace: {namespace}
      labels:
        system: elasticsearch-{user}

-   kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1beta1
    metadata:
      name: elasticsearch-{user}
      labels:
        system: elasticsearch-{user}
    subjects:
      - kind: ServiceAccount
        name: elasticsearch-{user}
        namespace: {namespace}
    roleRef:
      kind: ClusterRole
      name: view
      apiGroup: rbac.authorization.k8s.io

-   apiVersion: v1
    kind: Service
    metadata:
      name: elasticsearch-logging
      namespace: {namespace}
      labels:
        system: elasticsearch-{user}
        k8s-app: elasticsearch-{user}
        kubernetes.io/cluster-service: "true"
        addonmanager.kubernetes.io/mode: Reconcile
        kubernetes.io/name: "Elasticsearch"
    spec:
      type: NodePort
      ports:
      - port: 9200
        protocol: TCP
        targetPort: db
      selector:
        k8s-app: elasticsearch-{user}

-   apiVersion: v1
    kind: ReplicationController
    metadata:
      name: elasticsearch-{user}
      namespace: {namespace}
      labels:
        system: elasticsearch-{user}
        k8s-app: elasticsearch-{user}
        version: v1
        kubernetes.io/cluster-service: "true"
        addonmanager.kubernetes.io/mode: Reconcile
    spec:
      replicas: 1
      selector:
        k8s-app: elasticsearch-{user}
        version: v1
      template:
        metadata:
          labels:
            system: elasticsearch-{user}
            k8s-app: elasticsearch-{user}
            version: v1
            kubernetes.io/cluster-service: "true"
        spec:
          serviceAccountName: elasticsearch-{user}
          containers:
          - image: onlyerich/elasticsearch:v2.4.1-2
            name: elasticsearch
            resources:
              limits:
                cpu: 1000m
              requests:
                cpu: 100m
            ports:
            - containerPort: 9200
              name: db
              protocol: TCP
            - containerPort: 9300
              name: transport
              protocol: TCP
            volumeMounts:
            - name: es-persistent-storage
              mountPath: /data
            env:
            - name: "NAMESPACE"
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumes:
          - name: es-persistent-storage
            emptyDir: {}
